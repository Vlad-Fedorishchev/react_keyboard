{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","eventHandler","event","key","isSpaceKey","code","setState","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAEaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,2BAFhB,EAaEC,aAAe,SAACC,GACd,IAAQC,EAAcD,EAAdC,IAEFC,EAAsB,UAFNF,EAATG,KAGT,kCADe,mCAEaF,EAFb,KAInB,EAAKG,SAAS,CAAEN,WAAYI,KApBhC,uDAKE,WACEG,SAASC,iBAAiB,QAASC,KAAKR,gBAN5C,kCASE,WACEM,SAASG,oBAAoB,QAASD,KAAKR,gBAV/C,oBAuBE,WACE,IAAQD,EAAeS,KAAKV,MAApBC,WAER,OACE,qBAAKW,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGX,UA7BX,GAAyBY,a,MCGzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.ff36829f.chunk.js","sourcesContent":["import { Component } from 'react';\n\nexport class App extends Component {\n  state = {\n    pressedKey: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.eventHandler);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.eventHandler);\n  }\n\n  eventHandler = (event: KeyboardEvent) => {\n    const { key, code } = event;\n\n    const isSpaceKey = code === 'Space'\n      ? 'The last pressed key is [Space]'\n      : `The last pressed key is [${key}]`;\n\n    this.setState({ pressedKey: isSpaceKey });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressedKey}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}